version: '3.8'

services:
  db:
    hostname: db
    restart: always
    volumes:
      - ./data/postgresql_data:/var/lib/postgresql/data rvx

    container_name: pg_container
    image: postgres:14.4-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 0.0.0.0:5432:5432
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 3s
      timeout: 10s
      retries: 10

  pgadmin:
    hostname: pgadmin
    container_name: pgadmin4_container
    image: dpage/pgadmin4:6.11
    restart: always
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./data/pgadmin:/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 0.0.0.0:5050:80
    env_file:
      - .env

  app_main:
    container_name: app_container
    hostname: app_main
    restart: always
    depends_on:
      db:
        condition: service_healthy
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
        - ./backend:/backend
        
    env_file:
        - .env
    ports:
      - 0.0.0.0:8080:8080 
    command: bash -c 'alembic upgrade head && uvicorn app.src.main:app --host 0.0.0.0 --port 8080 --reload --workers 1 --debug --reload-include "*.py" '

    environment:
      DEBUG: ${DEBUG}

      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_SERVER: ${POSTGRES_SERVER}

      SECRET_KEY_API: ${SECRET_KEY_API}
      SECRET_KEY_SERVICES: ${SECRET_KEY_SERVICES}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      DEFAULT_DATA_DIR: ${DEFAULT_DATA_DIR}
